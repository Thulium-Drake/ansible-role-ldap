---
- name: 'Prepare'
  hosts: 'all'
  tasks:
    - name: 'Update APT cache'
      apt:
        update_cache: true
      when: ansible_facts['os_family'] == 'Debian'

    - name: 'Update YUM cache'
      yum:
        update_cache: true
      when: ansible_facts['os_family'] == 'RedHat'

    - name: 'Install openssl'
      package:
        name: 'openssl'
        state: 'present'

    - name: 'Ensure SSL directories'
      file:
        path: "/etc/ssl/{{ dir }}"
        state: 'directory'
        mode: 0775
      loop:
        - 'certs'
        - 'private'
      loop_control:
        loop_var: 'dir'

    - name: 'Generate selfsigned SSL key'
      community.crypto.openssl_privatekey:
        path: '/etc/ssl/private/ssl-cert-snakeoil.key'
        mode: 0644
        size: 2048

    - name: 'Generate selfsigned SSL CSR'
      community.crypto.openssl_csr:
        path: '/etc/ssl/certs/ssl-cert-snakeoil.csr'
        privatekey_path: '/etc/ssl/private/ssl-cert-snakeoil.key'
        common_name: 'ldap1.example.com'

    - name: 'Generate selfsigned SSL cert'
      ocommunity.crypto.penssl_certificate:
        csr_path: '/etc/ssl/certs/ssl-cert-snakeoil.csr'
        path: '/etc/ssl/certs/ssl-cert-snakeoil.pem'
        privatekey_path: '/etc/ssl/private/ssl-cert-snakeoil.key'
        provider: 'selfsigned'

    - name: 'Override DH params size for test'
      set_fact:
        ldap_dhparams_size: 1024

    - name: 'Run role'
      import_role:
        name: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') | basename }}"
        tasks_from: 'install_server.yml'

    - name: 'Run role'
      import_role:
        name: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') | basename }}"
        tasks_from: 'init_directory.yml'

    - name: 'Add test user'
      community.general.ldap_entry:
        server_uri: 'ldap://localhost'
        start_tls: true
        bind_dn: "cn=admin,{{ ldap_domain['searchbase'] }}"
        bind_pw: "{{ ldap_admin_password }}"
        validate_certs: false
        dn: "uid=ldapuser,ou=users,{{ ldap_domain['searchbase'] }}"
        objectClass:
          - 'top'
          - 'posixAccount'
          - 'shadowAccount'
          - 'inetOrgPerson'
          - 'organizationalPerson'
        attributes:
          cn: 'LDAP User'
          sn: 'User'
          loginShell: '/bin/bash'
          gidNumber: 20041
          uidNumber: 20041
          homeDirectory: '/home/ldapuser'
          userPassword: 'password'

    - name: 'Add test user to sudo group'
      community.general.ldap_attr:
        server_uri: 'ldap://localhost'
        start_tls: true
        bind_dn: "cn=admin,{{ ldap_domain['searchbase'] }}"
        bind_pw: "{{ ldap_admin_password }}"
        validate_certs: false
        state: 'exact'
        dn: "cn={{ ldap_domain['linux_admins'] }},ou=groups,{{ ldap_domain['searchbase'] }}"
        name: 'memberUid'
        values:
          - 'ldapuser'

    - name: 'Add ldap servers to hosts file'
      lineinfile:
        path: '/etc/hosts'
        line: '127.0.0.1 ldap1.example.com ldap2.example.com'
        state: 'present'
        unsafe_writes: true

---
- name: 'Include OS specific vars'
  ansible.builtin.include_vars: "{{ ansible_facts['os_family'] }}.yml"
  no_log: true

- name: 'Install packages'
  ansible.builtin.include_tasks: "install-{{ ansible_facts['os_family'] }}.yml"

- name: 'Configure services'
  ansible.builtin.template:
    dest: "{{ conffile.dest }}"
    src: "{{ conffile.src }}"
    mode: "{{ conffile.mode }}"
    owner: 'root'
    group: 'root'
  loop:
    - {src: 'ldap.conf.j2', mode: '0644', dest: "{{ openldap_conffile }}"}
    - {src: 'sssd.conf.j2', mode: '0600', dest: '/etc/sssd/sssd.conf'}
  loop_control:
    loop_var: 'conffile'
  notify:
    - reconfigure redhat pam
    - reconfigure debian pam
    - restart sssd
    - restart autofs
    - clear sssd cache

- name: 'Enable services - Common'
  ansible.builtin.systemd:
    name: "{{ service.name }}"
    enabled: "{{ service.enabled }}"
    masked: "{{ service.masked }}"
    state: "{{ service.state }}"
  loop:
    - {'name':'sssd', 'enabled':'yes', 'masked':'no', 'state':'started'}
  loop_control:
    loop_var: 'service'

- name: 'Disable service - systemd-logind if installed'
  ansible.builtin.systemd:
    name: "{{ service.name }}"
    enabled: "{{ service.enabled }}"
    masked: "{{ service.masked }}"
    state: "{{ service.state }}"
  loop:
    - {'name':'systemd-logind', 'enabled':'no', 'masked':'yes', 'state':'stopped'}
  loop_control:
    loop_var: 'service'
  failed_when: false
  when: not ldap_disable_logind

- name: 'Enable services - AutoFS'
  ansible.builtin.systemd:
    name: "{{ service.name }}"
    enabled: "{{ service.enabled }}"
    masked: "{{ service.masked }}"
    state: "{{ service.state }}"
  loop:
    - {'name':'autofs', 'enabled':'yes', 'masked':'no', 'state':'started'}
  loop_control:
    loop_var: 'service'
  when:
    - ldap_domain.autofs_searchbase is defined
    - not ldap_disable_autofs

- name: 'Configure NSS'
  ansible.builtin.lineinfile:
    path: '/etc/nsswitch.conf'
    line: 'automount:      files sss'
    regexp: '^automount'
    state: 'present'
  when:
    - ldap_domain.autofs_searchbase is defined
    - not ldap_disable_autofs

- name: 'Configure services - OS-specific'
  ansible.builtin.systemd:
    name: "{{ service.name }}"
    enabled: "{{ service.enabled }}"
    masked: "{{ service.masked }}"
    state: "{{ service.state }}"
  loop: "{{ os_specific_services }}"
  loop_control:
    loop_var: 'service'
  when: os_specific_services is defined

- name: 'Configure Sudo permissions for admin users'
  ansible.builtin.template:
    src: 'sudoers_10_linux_admins.j2'
    dest: '/etc/sudoers.d/10_linux_admins'
    mode: '0440'
    validate: 'visudo -cf %s'
    owner: 'root'
    group: 'root'
  when: ldap_domain.linux_admins is defined
